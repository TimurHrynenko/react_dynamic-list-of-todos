{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","todos","titleFilter","selectedUser","selectUser","setTodosStatus","titleFilterChangeHandler","className","htmlFor","id","type","name","value","onChange","target","event","map","title","completed","userId","key","checked","readOnly","onClick","API_URL","request","endpoint","query","fetch","then","response","json","CurrentUser","state","user","this","props","data","setState","prevProps","email","phone","clearUser","React","Component","App","selectedUserId","todosStatus","status","prepareTodos","visibleTodos","filter","trim","todo","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1ec0e2c.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  titleFilter,\n  selectedUser,\n  selectUser,\n  setTodosStatus,\n  titleFilterChangeHandler,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <label htmlFor=\"title-filter\" className=\"TodoList__input-label\">\n        Search by title name\n        <input\n          className=\"TodoList__title-search\"\n          id=\"title-filter\"\n          type=\"text\"\n          name=\"titleFilter\"\n          value={titleFilter}\n          onChange={({ target }) => titleFilterChangeHandler(target)}\n        />\n      </label>\n\n      <label htmlFor=\"todo-status\" className=\"TodoList__input-label\">\n        Select todo status\n        <select\n          name=\"todo-status\"\n          id=\"todo-status\"\n          className=\"TodoList__status-select\"\n          onChange={event => setTodosStatus(event.target.value)}\n        >\n          <option\n            value=\"All\"\n          >\n            All\n          </option>\n          <option\n            value=\"Active\"\n          >\n            Active\n          </option>\n          <option\n            value=\"Completed\"\n          >\n            Completed\n          </option>\n        </select>\n      </label>\n\n      <ul className=\"TodoList__list\">\n        {todos.map(({ id, title, completed, userId }) => (\n          <li\n            key={id}\n            className={\n              completed\n                ? 'TodoList__item TodoList__item--checked'\n                : 'TodoList__item TodoList__item--unchecked'\n            }\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={completed}\n                readOnly\n              />\n              <p>{title}</p>\n            </label>\n\n            <button\n              className={\n                userId === selectedUser\n                  ? `\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    `\n                  : 'TodoList__user-button button'\n              }\n              type=\"button\"\n              onClick={() => {\n                selectUser(userId);\n              }}\n            >\n              {`User: #${userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n  })).isRequired,\n  titleFilter: PropTypes.string.isRequired,\n  selectedUser: PropTypes.number.isRequired,\n  selectUser: PropTypes.func.isRequired,\n  setTodosStatus: PropTypes.func.isRequired,\n  titleFilterChangeHandler: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-api.herokuapp.com`;\n\nexport function request(endpoint, query) {\n  return fetch(\n    !query ? `${API_URL}${endpoint}` : `${API_URL}${endpoint}${query}`,\n  )\n    .then(response => response.json());\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { request } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    request('/users', `/${this.props.userId}`)\n      .then(({ data }) => this.setState({ user: { ...data } }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userId !== prevProps.userId) {\n      request('/users', `/${this.props.userId}`)\n        .then(({ data }) => this.setState({ user: { ...data } }));\n    }\n  }\n\n  render() {\n    const { id, name, email, phone } = this.state.user;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          className=\"CurrentUser__clear\"\n          type=\"button\"\n          onClick={clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { request } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    titleFilter: '',\n    todosStatus: 'All',\n  };\n\n  componentDidMount() {\n    request('/todos')\n      .then(({ data }) => this.setState({ todos: [...data] }));\n  }\n\n  titleFilterChangeHandler = ({ name, value }) => {\n    this.setState({ [name]: value });\n  }\n\n  setTodosStatus = (status) => {\n    this.setState({ todosStatus: status });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  selectUser = (userId) => {\n    this.setState((state) => {\n      if (state.selectedUserId === userId) {\n        return state;\n      }\n\n      return {\n        ...state,\n        selectedUserId: userId,\n      };\n    });\n  }\n\n  prepareTodos = () => {\n    const { todos, titleFilter, todosStatus } = this.state;\n\n    let visibleTodos = [...todos];\n\n    if (todosStatus === 'Active') {\n      visibleTodos = [...todos].filter(({ completed }) => completed === false);\n    }\n\n    if (todosStatus === 'Completed') {\n      visibleTodos = [...todos].filter(({ completed }) => completed === true);\n    }\n\n    if (titleFilter.trim()) {\n      visibleTodos = [...visibleTodos].filter(todo => (\n        (`${todo.title}`).toLowerCase().includes(titleFilter.toLowerCase())\n      ));\n    }\n\n    return visibleTodos;\n  }\n\n  render() {\n    const { titleFilter, selectedUserId } = this.state;\n    const visibleTodos = this.prepareTodos();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={visibleTodos}\n            selectedUser={selectedUserId}\n            titleFilter={titleFilter}\n            titleFilterChangeHandler={this.titleFilterChangeHandler}\n            selectUser={this.selectUser}\n            setTodosStatus={this.setTodosStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}